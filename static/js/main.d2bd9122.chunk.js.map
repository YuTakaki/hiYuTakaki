{"version":3,"sources":["assets/popcorn.png","assets/diary.png","assets/tweetIt.png","assets/yu.jpg","components/header.js","projects.js","components/projects.js","components/home.js","components/about.js","components/contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","useState","display","setDisplay","closeOption","document","querySelector","classList","remove","href","onClick","toggle","className","ProjectList","name","code","demo","summary","image","technologies","Projects","proj","popcorn","tweetIt","diary","src","target","e","parentElement","nextSibling","Home","canvasRef","useRef","useEffect","width","height","canvas","current","getBoundingClientRect","ctx","getContext","window","addEventListener","clearRect","circles","create","Circle","x","y","radius","dx","dy","color","this","beginPath","arc","Math","PI","fillStyle","fill","draw","colors","i","random","floor","length","push","animation","requestAnimationFrame","map","c","update","id","ref","About","yu","Contact","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d2bd9122.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popcorn.ead02c9a.png\";","module.exports = __webpack_public_path__ + \"static/media/diary.cabbb976.png\";","module.exports = __webpack_public_path__ + \"static/media/tweetIt.3166ca56.png\";","module.exports = __webpack_public_path__ + \"static/media/yu.b23ced06.jpg\";","import React, {useState} from 'react';\r\n\r\nconst Header = () => {\r\n    const [display, setDisplay] = useState(false)\r\n    const showOptions = () => {\r\n        document.querySelector('header ul').classList.toggle('displayNav');\r\n        setDisplay(!display);\r\n    }\r\n    const closeOption = () => {\r\n        document.querySelector('header ul').classList.remove('displayNav');\r\n        setDisplay(false);\r\n\r\n    }\r\n    \r\n    return ( \r\n        <header>\r\n            <a href='#home'><h1>YT</h1></a>\r\n            <ul>\r\n            <a onClick={closeOption} href='#home'><li>Home</li></a>\r\n            <a onClick={closeOption} href='#projects'><li>Projects</li></a>\r\n            <a onClick={closeOption} href='#about'><li>About</li></a>\r\n            <a onClick={closeOption} href='#contact'><li>Contact</li></a>\r\n            </ul>\r\n            <i onClick={showOptions} className={display ? 'fa fa-close' : 'fa fa-bars'}></i>\r\n            \r\n        </header>\r\n     );\r\n}\r\n \r\nexport default Header;","export const ProjectList = [\r\n    {\r\n        name : \"tweetIt\",\r\n        code : 'https://github.com/YuTakaki/tweetIt',\r\n        demo : 'https://tweet-it-yu.herokuapp.com/#/',\r\n        summary : 'This application is a twitter clone that lets you post a tweet, like a tweet, and comment in a tweet. You can also add a friend to view the tweets they post.',\r\n        image : 'tweetIt',\r\n        technologies : 'html, css, sass, react hooks, express.js, node.js, passport.js, bcrypt, cloudinary, mongodb'\r\n    },\r\n    {\r\n        name : \"Popcorn Time\",\r\n        code : 'https://github.com/YuTakaki/popcorn-time',\r\n        demo : 'https://yutakaki.github.io/popcorn-time/#/',\r\n        summary : 'This is a movie/tv series web application using moviedb as the source of the data. You can view the most trending, popular and on show movie/tv series in just one click.',\r\n        image : 'popcorn',\r\n        technologies : 'html, sass, react hooks, moviedb'\r\n    },\r\n    {\r\n        name : \"Diary\",\r\n        code : 'https://github.com/YuTakaki/diary-app',\r\n        demo : 'https://diary-web.herokuapp.com/#/',\r\n        summary : 'This is a small diary application where you can save a diary and view them when you wants to. It has a filter feature where you can only view a certain records dependent on what date the users choose. ',\r\n        image : 'diary',\r\n        technologies : 'html, css, sass, react hooks, express.js, node.js, passport.js, bcrypt,  mongodb'\r\n    },\r\n]","import React from 'react';\r\nimport popcorn from '../assets/popcorn.png';\r\nimport diary from '../assets/diary.png';\r\nimport tweetIt from '../assets/tweetIt.png';\r\n\r\nconst Projects = ({proj}) => {\r\n    const seeSummary = (e) => {\r\n        e.target.parentElement.nextSibling.classList.toggle('project_details_active')\r\n    \r\n      }\r\n    const image = proj.image === 'popcorn' ? popcorn : proj.image === 'tweetIt' ? tweetIt : diary;\r\n    return ( \r\n        <div className='project'>\r\n            <div className='project_img'>\r\n                <h1>{proj.name}</h1>\r\n                <img src={image}/>\r\n                <p>{proj.technologies}</p>\r\n                <div className='buttons'>\r\n                <a href={proj.code} target='_blank'><div>View Code</div></a>\r\n                <a href={proj.demo} target='_blank'><div>Demo</div></a>\r\n                </div>\r\n                <div onClick={seeSummary} className='seeMore fa fa-angle-down'></div>\r\n                \r\n            </div>\r\n            <div className='project_details'>\r\n                <h3>Summary</h3>\r\n                <p>{proj.summary}</p>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Projects;","import React, {useRef, useEffect} from 'react';\r\nconst Home = () => {\r\n  const canvasRef = useRef(null);\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    let width;\r\n    let height;\r\n    canvas.width = width= document.querySelector('.home').getBoundingClientRect().width;\r\n    canvas.height = height= document.querySelector('.home').getBoundingClientRect().height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    window.addEventListener('resize', function(){\r\n      canvas.width = width = document.querySelector('.home').getBoundingClientRect().width;\r\n      canvas.height = height = document.querySelector('.home').getBoundingClientRect().height;\r\n      ctx.clearRect(0, 0, width, height);\r\n      circles = [];\r\n      create();\r\n  \r\n  })\r\n\r\n    class Circle{\r\n      constructor(x, y, radius, dx, dy, color) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.radius = radius;\r\n        this.dx = dx;\r\n        this.dy = dy;\r\n        this.color = color\r\n      }\r\n      draw(){\r\n        ctx.beginPath();\r\n        ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n        ctx.fillStyle = this.color\r\n        ctx.fill();\r\n\r\n      }\r\n      update(){\r\n        if(this.x > width  || this.x < 0){\r\n          this.dx = -this.dx;\r\n        }\r\n        if(this.y > height || this.y < 0){\r\n          this.dy = -this.dy;\r\n        }\r\n        this.x += this.dx;\r\n        this.y += this.dy;\r\n        this.draw();\r\n\r\n      }\r\n    }\r\n    let circles = [];\r\n    let colors = ['rgba(72, 72, 72, 0.5)', 'rgba(44, 44, 44, 0.5)', 'rgba(15, 15, 15, 0.5)', 'rgba(242,207,25, 0.5)']\r\n\r\n    const create = () => {\r\n      for(let i = 0; i < 10; i++){\r\n        var radius = width * .15;\r\n        var x = Math.random() * width;\r\n        var y =   Math.random() * height;\r\n        \r\n        var dx = Math.random() * 0.5 + 1;\r\n        var dy = Math.random() * 0.5 + 1;\r\n        var color = colors[Math.floor(Math.random() * colors.length)];\r\n  \r\n        circles.push(new Circle(x, y, radius, dx, dy, color));\r\n      };\r\n\r\n    };\r\n\r\n    \r\n\r\n    const animation = () => {\r\n      ctx.clearRect(0, 0, width, height);\r\n      \r\n      requestAnimationFrame(animation);\r\n      circles.map(c => c.update());\r\n    };\r\n\r\n    animation();\r\n    create();\r\n\r\n  }, [])\r\n\r\n\r\n    \r\n    return ( \r\n        <section className='home' id='home'>\r\n          <canvas ref={canvasRef}></canvas>\r\n          <div className='home-content'>\r\n            <div className='my-info'>\r\n              <h1 className='first'>Yu</h1>\r\n              <h1 className='second'>Takaki</h1>\r\n              <h1 className='third'>Software Engineer</h1>\r\n            </div>\r\n            <div className='my-slogan'>\r\n              <h1 className='fourth'>Lets Work Together As A Team</h1>\r\n              <ul>\r\n                <a href='https://www.facebook.com/yuyu.takaks/' target='_blank'><li className='fa fa-facebook'></li></a>\r\n                <a href='https://twitter.com/takakiyuuu' target='_blank'><li className='fa fa-twitter'></li></a>\r\n                <a href='https://github.com/YuTakaki' target='_blank'><li className='fa fa-github'></li></a>\r\n                <a href='https://www.linkedin.com/in/yu-takaki-1236331a4/' target='_blank'><li className='fa fa-linkedin'></li></a>\r\n              </ul>\r\n            </div>\r\n\r\n          </div>\r\n          \r\n        </section>\r\n     );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport yu from '../assets/yu.jpg';\r\n\r\nconst About = () => {\r\n    return ( \r\n        <section className='about' id='about'>\r\n          <div className='section-title'>\r\n            <h1>ABOUT</h1>\r\n          </div>\r\n          <div className='section-content'>\r\n            <div className='myProfile'>\r\n              <div className='myImage'>\r\n                <img src={yu}/>\r\n                <a><p>View Resume</p></a>\r\n              </div>\r\n              <div className='me'>\r\n               <p>Hi! I'm a software engineer who likes to spend much of his time coding things.</p>\r\n               <p>Back in my high school days, I've always loved solving logics and riddles during lunch breaks. At the end of senior high school, I've stumbled upon programming and I liked it. On that day forward i dreamed about becoming a programmer someday.</p>\r\n               <p>I enjoy solving complex coding problems and building web applications using (MERN). My main programming language is Javascript. Although I have fundamental knowledge about python and java, I am much comfortable writing in javascript. For the backend, I know fundamentals of sql and Mongodb. My passion and motivation for programming makes me want to contribute to the evolution of tech industries in the world while having fun doing it.</p>\r\n              </div>\r\n\r\n            </div>\r\n            \r\n\r\n          </div>\r\n\r\n\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default About;","import React from 'react';\r\n\r\nconst Contact = () => {\r\n    return ( \r\n        <section className='contact' id='contact'>\r\n        \r\n        <div className='section-title'>\r\n            <h1>Contact</h1>\r\n          </div>\r\n          <div className='section-content'>\r\n            <h2>Feel free to contact me.</h2>\r\n            <div className='contact-container'>\r\n              <div className='contactDetails'>\r\n                <h1>Contact Details:</h1>\r\n                <ul>\r\n                  <li>\r\n                    <i className='fa fa-phone'></i>\r\n                    <p>090-4163-0614</p>\r\n                  </li>\r\n                  <li>\r\n                    <i className='fa fa-envelope'></i>\r\n                    <p>yu.takaki2000@gmail.com</p>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n              <div className='socialDetails'>\r\n                <h1>Socials:</h1>\r\n                <ul>\r\n                  <a href='https://www.facebook.com/yuyu.takaks/' target='_blank'><li className='fa fa-facebook'></li></a>\r\n                  <a href='https://twitter.com/takakiyuuu' target='_blank'><li className='fa fa-twitter'></li></a>\r\n                  <a href='https://github.com/YuTakaki' target='_blank'><li className='fa fa-github'></li></a>\r\n                  <a href='https://www.linkedin.com/in/yu-takaki-1236331a4/' target='_blank'><li className='fa fa-linkedin'></li></a>\r\n                </ul>\r\n              </div>\r\n              \r\n              \r\n            </div>\r\n\r\n          </div>\r\n        </section>\r\n     );\r\n}\r\n \r\nexport default Contact;","import React from 'react';\nimport Header from './components/header';\nimport './styles/sass/app.scss';\n\nimport {ProjectList} from './projects';\nimport Projects from './components/projects';\n\nimport Home from './components/home';\nimport About from './components/about';\nimport Contact from './components/contact';\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Header />\n      <main>\n        <Home />\n        <section className='projects' id='projects'>\n          <div className='section-title'>\n            <h1>PROJECTS</h1>\n          </div>\n          <div className='section-content'>\n            <div className='project-container'>\n            {ProjectList.map(proj => <Projects proj={proj}/>)}\n\n              \n            </div>\n\n          </div>\n        </section>\n\n\n        <About />\n        <Contact />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}